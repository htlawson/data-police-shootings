percentage_black_women_of_all <- total_black_women_shot_and_killed / total_fatal_shootings_known_race * 100
cat("Percentage of Black women out of overall fatal shootings in cases where race was known:", percentage_black_women_of_all, "%\n")
# Percentage of Black women out of all women shot and killed
percentage_black_women_of_all_women <- total_black_women_shot_and_killed / total_women_shot_and_killed * 100
# Percentage unarmed Black women out of all unarmed deaths
percentage_black_women_unarmed_deaths <- total_unarmed_black_women_shot_and_killed / total_unarmed_women_shot_and_killed * 100
# *** WRONG
cat("Percentage of Black women of all women shot and killed:", percentage_black_women_of_all_women, "%\n")
cat("Percentage unarmed Black women shot and killed out of all unarmed deaths:", percentage_black_women_unarmed_deaths, "%\n")
# *** WRONG
View(shootings_agencies)
View(fatal_shootings_known_race)
View(shootings_agencies)
# Total number of accidental deaths
total_accidental_deaths <- nrow(subset(fatal_shootings_known_race, threat_type == "accident"))
# Total number of accidental deaths
total_accidental_deaths <- nrow(subset(fatal_shootings_known_race, threat_type == "accident"))
total_accidental_deaths
# Total number of accidental deaths
total_accidental_deaths <- nrow(subset(shootings_data_2, threat_type == "accident"))
total_accidental_deaths
# Total number of accidental deaths
total_accidental_deaths <- nrow(subset(fatal_shootings_known_race, threat_type == "accident"))
total_accidental_deaths
# Total number of accidental deaths
total_accidental_deaths <- nrow(subset(fatal_shootings_known_race, threat_type == "accident" & gender == "female"))
total_accidental_deaths
# Filtering the data for fatal shootings where race is known
fatal_shootings_known_race <- subset(shootings_data_2, !is.na(race))
# Number of shootings where race is known
total_fatal_shootings_known_race <- nrow(fatal_shootings_known_race)
# Total number of Black women shot and killed
total_black_women_shot_and_killed <- nrow(subset(fatal_shootings_known_race, race == "B" & gender == "female"))
# Total number of all women shot and killed
total_women_shot_and_killed <- nrow(subset(shootings_data_2, gender == "female"))
# Total number of Black women shot and killed
total_black_women_shot_and_killed <- nrow(subset(fatal_shootings_known_race, race == "B" & gender == "female"))
# Total number of all unarmed people shot and killed
total_unarmed_shot_and_killed <- nrow(subset(fatal_shootings_known_race, armed_with == "unarmed"))
# Total number of all unarmed women shot and killed
total_unarmed_women_shot_and_killed <- nrow(subset(fatal_shootings_known_race, gender == "female" & armed_with == "unarmed"))
# Total number of unarmed Black women shot and killed
total_unarmed_black_women_shot_and_killed <- nrow(subset(fatal_shootings_known_race, race == "B" & gender == "female" & armed_with == "unarmed"))
# Filtering the data for fatal shootings where race is known
fatal_shootings_known_race <- subset(shootings_data_2, !is.na(race))
# Number of shootings where race is known
total_fatal_shootings_known_race <- nrow(fatal_shootings_known_race)
# Total number of Black women shot and killed
total_black_women_shot_and_killed <- nrow(subset(fatal_shootings_known_race, race == "B" & gender == "female"))
# Total number of all women shot and killed
total_women_shot_and_killed <- nrow(subset(fatal_shootings_known_race, gender == "female"))
# Total number of Black women shot and killed
total_black_women_shot_and_killed <- nrow(subset(fatal_shootings_known_race, race == "B" & gender == "female"))
# Total number of all unarmed people shot and killed
total_unarmed_shot_and_killed <- nrow(subset(fatal_shootings_known_race, armed_with == "unarmed"))
# Total number of all unarmed women shot and killed
total_unarmed_women_shot_and_killed <- nrow(subset(fatal_shootings_known_race, gender == "female" & armed_with == "unarmed"))
# Total number of unarmed Black women shot and killed
total_unarmed_black_women_shot_and_killed <- nrow(subset(fatal_shootings_known_race, race == "B" & gender == "female" & armed_with == "unarmed"))
# Total number of accidental deaths
total_accidental_deaths <- nrow(subset(fatal_shootings_known_race, threat_type %in% c("accident", "undetermined") & gender == "female"))
total_accidental_deaths
# Total number of accidental deaths
total_accidental_deaths <- nrow(subset(fatal_shootings_known_race, threat_type == "accident" & gender == "female"))
total_accidental_deaths
# Total number of all unarmed women shot and killed
total_unarmed_women_shot_and_killed <- nrow(subset(fatal_shootings_known_race, gender == "female" & armed_with == "unarmed"))
total_unarmed_women_shot_and_killed
View(shootings_agencies)
# Total number of all unarmed women shot and killed
total_unarmed_women_shot_and_killed
View(shootings_agencies)
shootings_data_2 <- read_csv("v2/fatal-police-shootings-data.csv")
shootings_agencies <- read_csv("v2/fatal-police-shootings-agencies.csv")
fatal_encounters_data <- read_csv("fatal_encounters_data.csv")
View(fatal_encounters_data)
knitr::opts_chunk$set(echo = TRUE)
library (tidyverse)
library (rmarkdown)
library (janitor)
library (ggplot2)
library (dplyr)
library (leaflet)
library (sf)
# Assuming these packages are already installed.
# Assuming base, datasets, forcats, graphics, purrr, readr, and stats are already installed and loaded.
shootings_data_2 <- read_csv("v2/fatal-police-shootings-data.csv")
shootings_agencies <- read_csv("v2/fatal-police-shootings-agencies.csv")
fatal_encounters_data <- read_csv("fatal_encounters_data.csv")
View(fatal_encounters_data)
updated_fatal_encounters <- subset(fatal_encounters_data, !is.na("Race with imputations"))
updated_fatal_encounters <- subset(fatal_encounters_data, !is.na(Race with imputations))
updated_fatal_encounters <- subset(fatal_encounters_data, !is.na(`Race with imputations`))
View(updated_fatal_encounters)
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
as.Date(Date, format = "%Y/%m/%d") >= as.Date("2015/01/01"))
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
as.Date(`Date of injury resulting in death (month/day/year)`, format = "%Y/%m/%d") >= as.Date("2015/01/01"))
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
as.Date(`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y") >= as.Date("01/01/2015"))
View(updated_fatal_encounters)
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("2015-01-01"))
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("01/01/2015"))
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("01/01/2015"))
# Convert the date column to Date type with the correct format
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")
# Filter out rows with missing race and dates before 2015
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("2015-01-01"))
View(updated_fatal_encounters)
# Filter out rows with missing race and dates before 2015
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("2015-01-01"))
# Filter out rows with missing race and dates before 2015
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("2015-01-01"))
# Filter out rows with missing race and dates before 2015
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("2015-01-01"))
View(updated_fatal_encounters)
# Convert the date column to Date type with the correct format
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")
# Filter out rows with missing race and dates before 2015
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("01/01/2015"))
# Convert the date column to Date type with the correct format
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")
# Filter out rows with missing race and dates before 2015
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("01/01/2015"))
# Filter out rows with missing race and dates before 2015
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("01/01/2015"))
# Filter out rows with missing race and dates before 2015
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("01/01/2015"))
View(updated_fatal_encounters)
# Filter out rows with missing race and dates before 2015
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("01/01/2015"))
View(updated_fatal_encounters)
# Convert the date column to Date type with the correct format
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")
# Filter out rows with missing race and dates before 2015
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("01/01/2015"))
View(updated_fatal_encounters)
shootings_data_2 <- read_csv("v2/fatal-police-shootings-data.csv")
shootings_agencies <- read_csv("v2/fatal-police-shootings-agencies.csv")
fatal_encounters_data <- read_csv("fatal_encounters_data.csv")
# Convert the date column to Date type with the correct format
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")
# Filter out rows with missing race and dates before 2015
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("01/01/2015"))
View(updated_fatal_encounters)
# Convert the date column to Date type with the correct format
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%y")
# Filter out rows with missing race and dates before 2015
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("01/01/15", format = "%m/%d/%y"))
View(updated_fatal_encounters)
# Convert the date column to Date type with the correct format
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%y")
# Filter out rows with missing race and dates before 2015
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("01/01/15", format = "%m/%d/%y"))
View(updated_fatal_encounters)
# Convert the date column to Date type with the correct format
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m-%d-%y")
# Filter out rows with missing race and dates before 2015
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("01/01/15", format = "%m/%d/%y"))
knitr::opts_chunk$set(echo = TRUE)
library (tidyverse)
library (rmarkdown)
library (janitor)
library (ggplot2)
library (dplyr)
library (leaflet)
library (sf)
# Assuming these packages are already installed.
# Assuming base, datasets, forcats, graphics, purrr, readr, and stats are already installed and loaded.
shootings_data_2 <- read_csv("v2/fatal-police-shootings-data.csv")
shootings_agencies <- read_csv("v2/fatal-police-shootings-agencies.csv")
fatal_encounters_data <- read_csv("fatal_encounters_data.csv")
# Convert the date column to Date type with the correct format
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m-%d-%y")
# Filter out rows with missing race and dates before 2015
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("01/01/15", format = "%m/%d/%y"))
# Filtering the data for fatal shootings where race is known
fatal_shootings_known_race <- subset(shootings_data_2, !is.na(race))
# Number of shootings where race is known
total_fatal_shootings_known_race <- nrow(fatal_shootings_known_race)
# Total number of Black women shot and killed
total_black_women_shot_and_killed <- nrow(subset(fatal_shootings_known_race, race == "B" & gender == "female"))
# Total number of all women shot and killed
total_women_shot_and_killed <- nrow(subset(fatal_shootings_known_race, gender == "female"))
# Total number of Black women shot and killed
total_black_women_shot_and_killed <- nrow(subset(fatal_shootings_known_race, race == "B" & gender == "female"))
# Total number of all unarmed people shot and killed
total_unarmed_shot_and_killed <- nrow(subset(fatal_shootings_known_race, armed_with == "unarmed"))
# Total number of all unarmed women shot and killed
total_unarmed_women_shot_and_killed <- nrow(subset(fatal_shootings_known_race, gender == "female" & armed_with == "unarmed"))
# Total number of unarmed Black women shot and killed
total_unarmed_black_women_shot_and_killed <- nrow(subset(fatal_shootings_known_race, race == "B" & gender == "female" & armed_with == "unarmed"))
# Percentage of Black women of all shot and killed
percentage_black_women_of_all <- total_black_women_shot_and_killed / total_fatal_shootings_known_race * 100
cat("Percentage of Black women out of overall fatal shootings in cases where race was known:", percentage_black_women_of_all, "%\n")
# Percentage of Black women out of all women shot and killed
percentage_black_women_of_all_women <- total_black_women_shot_and_killed / total_women_shot_and_killed * 100
# Percentage unarmed Black women out of all unarmed deaths
percentage_black_women_unarmed_deaths <- total_unarmed_black_women_shot_and_killed / total_unarmed_women_shot_and_killed * 100
# *** WRONG
cat("Percentage of Black women of all women shot and killed:", percentage_black_women_of_all_women, "%\n")
cat("Percentage unarmed Black women shot and killed out of all unarmed deaths:", percentage_black_women_unarmed_deaths, "%\n")
# *** WRONG
knitr::opts_chunk$set(echo = TRUE)
library (tidyverse)
library (rmarkdown)
library (janitor)
library (ggplot2)
library (dplyr)
library (leaflet)
library (sf)
# Assuming these packages are already installed.
# Assuming base, datasets, forcats, graphics, purrr, readr, and stats are already installed and loaded.
shootings_data_2 <- read_csv("v2/fatal-police-shootings-data.csv")
shootings_agencies <- read_csv("v2/fatal-police-shootings-agencies.csv")
fatal_encounters_data <- read_csv("fatal_encounters_data.csv")
# Convert the date column to Date type with the correct format
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m-%d-%y")
# Filter out rows with missing race and dates before 2015
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("01/01/15", format = "%m/%d/%y"))
View(updated_fatal_encounters)
# Convert the date column to Date type with the correct format
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%y")
# Filter out rows with missing race and dates before 2015
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("01/01/15", format = "%m/%d/%y"))
# Convert the date column to Date type with the correct format
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%y")
# Filter out rows with missing race and dates before 2015
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("01/01/15", format = "%m/%d/%y"))
# Convert the date column to Date type with the correct format
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%y")
# Filter out rows with missing race and dates before 2015
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("01/01/15", format = "%m/%d/%y"))
View(fatal_encounters_data)
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("01/01/15", format = "%m/%d/%y"))
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("01/01/15", format = "%m/%d/%y"))
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`))
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) & Date >= as.Date("01/01/2015"))
# Convert Date column to Date type
fatal_encounters_data$Date <- as.Date(fatal_encounters_data$Date)
# Convert Date column to Date type
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")
# Subset the data
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) & `Date of injury resulting in death (month/day/year)` >= as.Date("2015-01-01"))
# Convert Date column to Date type
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")
# Subset the data
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) & `Date of injury resulting in death (month/day/year)` >= as.Date("2015-01-01"))
# Convert Date column to Date type
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")
# Subset the data
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) & `Date of injury resulting in death (month/day/year)` >= as.Date("2015-01-01"))
# Convert Date column to Date type
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")
# Subset the data
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) & `Date of injury resulting in death (month/day/year)` >= as.Date("2015-01-01"))
# Convert Date column to Date type
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")
# Subset the data
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) & `Date of injury resulting in death (month/day/year)` >= as.Date("2015-01-01"))
# Convert Date column to Date type
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")
# Subset the data
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) & `Date of injury resulting in death (month/day/year)` >= as.Date("2015-01-01"))
# Convert Date column to Date type
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")
# Subset the data
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) & `Date of injury resulting in death (month/day/year)` >= as.Date("2015-01-01"))
# Convert Date column to Date type
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")
# Subset the data
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) & `Date of injury resulting in death (month/day/year)` >= as.Date("2015-01-01"))
View(updated_fatal_encounters)
# Convert Date column to Date type
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")
# Subset the data
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) & `Date of injury resulting in death (month/day/year)` >= as.Date("01/01/2015"))
# Convert Date column to Date type
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")
# Subset the data
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) & `Date of injury resulting in death (month/day/year)` >= as.Date("2015-01-01"))
# Convert Date column to Date type
fatal_encounters_data$Date <- as.Date(fatal_encounters_data$Date)
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("01/01/15", format = "%m/%d/%y"))
# Convert the date column to Date type with the correct format
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%y")
# Filter out rows with missing race and dates before 2015
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("01/01/15", format = "%m/%d/%y"))
# Convert the date column to Date type with the correct format
fatal_encounters_data$`Date of injury resulting in death (month/day/year)` <- as.Date(fatal_encounters_data$`Date of injury resulting in death (month/day/year)`, format = "%m-%d-%y")
# Filter out rows with missing race and dates before 2015
updated_fatal_encounters <- subset(fatal_encounters_data,
!is.na(`Race with imputations`) &
`Date of injury resulting in death (month/day/year)` >= as.Date("01/01/15", format = "%m/%d/%y"))
View(fatal_encounters_data)
# Assuming your dataset is named fatal_encounters_data
updated_fatal_encounters <- fatal_encounters_data %>%
filter(!is.na(race) & !is.na(date)) %>%
mutate(date = as.Date(date, format = "%m/%d/%Y")) %>%
filter(date > as.Date("01/01/2015"))
# Assuming your dataset is named fatal_encounters_data
updated_fatal_encounters <- fatal_encounters_data %>%
filter(!is.na('Race with imputations') & !is.na('Date of injury resulting in death (month/day/year)')) %>%
mutate(date = as.Date(date, format = "%m/%d/%Y")) %>%
filter(date > as.Date("01/01/2015"))
# Assuming your dataset is named fatal_encounters_data
library(dplyr)
updated_fatal_encounters <- fatal_encounters_data %>%
filter(!is.na(`Race with imputations`) & !is.na(`Date of injury resulting in death (month/day/year)`)) %>%
mutate(date = as.Date(`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")) %>%
filter(date > as.Date("2015-01-01"))
# Assuming your dataset is named fatal_encounters_data
library(dplyr)
updated_fatal_encounters <- fatal_encounters_data %>%
filter(!is.na(`Race with imputations`) & !is.na(`Date of injury resulting in death (month/day/year)`)) %>%
mutate(date = as.Date(`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")) %>%
filter(date > as.Date("2015-01-01"))
View(updated_fatal_encounters)
library(dplyr)
updated_fatal_encounters <- fatal_encounters_data %>%
filter(!is.na(`Race with imputations`) & !is.na(`Date of injury resulting in death (month/day/year)`)) %>%
mutate(date = as.Date(`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")) %>%
filter(date > as.Date("2015-01-01"))
library(dplyr)
updated_fatal_encounters <- fatal_encounters_data %>%
filter(!is.na(`Race with imputations`) & !is.na(`Date of injury resulting in death (month/day/year)`)) %>%
mutate(date = as.Date(`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")) %>%
filter(date > as.Date("2015-01-01"))
library(dplyr)
updated_fatal_encounters <- fatal_encounters_data %>%
filter(!is.na(`Race with imputations`) & !is.na(`Date of injury resulting in death (month/day/year)`)) %>%
mutate(date = as.Date(`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")) %>%
filter(date > as.Date("2015-01-01"))
library(dplyr)
updated_fatal_encounters <- fatal_encounters_data %>%
filter(!is.na(`Race with imputations`) & !is.na(`Date of injury resulting in death (month/day/year)`)) %>%
mutate(date = as.Date(`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")) %>%
filter(date > as.Date("2015-01-01"))
library(dplyr)
updated_fatal_encounters <- fatal_encounters_data %>%
filter(!is.na(`Race with imputations`) & !is.na(`Date of injury resulting in death (month/day/year)`)) %>%
mutate(date = as.Date(`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")) %>%
filter(date > as.Date("2015-01-01"))
library(dplyr)
updated_fatal_encounters <- fatal_encounters_data %>%
filter(!is.na(`Race with imputations`) & !is.na(`Date of injury resulting in death (month/day/year)`)) %>%
mutate(date = as.Date(`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")) %>%
filter(date > as.Date("2015-01-01"))
library(dplyr)
updated_fatal_encounters <- fatal_encounters_data %>%
filter(!is.na(`Race with imputations`) & !is.na(`Date of injury resulting in death (month/day/year)`)) %>%
mutate(date = as.Date(`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")) %>%
filter(date > as.Date("2015-01-01"))
library(dplyr)
updated_fatal_encounters <- fatal_encounters_data %>%
filter(!is.na(`Race with imputations`) & !is.na(`Date of injury resulting in death (month/day/year)`)) %>%
mutate(date = as.Date(`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")) %>%
filter(date > as.Date("01/01/2015"))
library(dplyr)
updated_fatal_encounters <- fatal_encounters_data %>%
filter(!is.na(`Race with imputations`) & !is.na(`Date of injury resulting in death (month/day/year)`)) %>%
mutate(date = as.Date(`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")) %>%
filter(date > as.Date("2015-01-01"))
knitr::opts_chunk$set(echo = TRUE)
library (tidyverse)
library (rmarkdown)
library (janitor)
library (ggplot2)
library (dplyr)
library (leaflet)
library (sf)
# Assuming these packages are already installed.
# Assuming base, datasets, forcats, graphics, purrr, readr, and stats are already installed and loaded.
shootings_data_2 <- read_csv("v2/fatal-police-shootings-data.csv")
shootings_agencies <- read_csv("v2/fatal-police-shootings-agencies.csv")
fatal_encounters_data <- read_csv("fatal_encounters_data.csv")
library(dplyr)
updated_fatal_encounters <- fatal_encounters_data %>%
filter(!is.na(`Race with imputations`) & !is.na(`Date of injury resulting in death (month/day/year)`)) %>%
mutate(date = as.Date(`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")) %>%
filter(date > as.Date("2015-01-01"))
View(updated_fatal_encounters)
library(dplyr)
updated_fatal_encounters <- fatal_encounters_data %>%
filter(!is.na(`Race with imputations`) & !is.na(`Date of injury resulting in death (month/day/year)`)) %>%
mutate(date = as.Date(`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")) %>%
filter(date > as.Date("01/01/2015"))
View(updated_fatal_encounters)
library(dplyr)
updated_fatal_encounters <- fatal_encounters_data %>%
filter(!is.na(`Race with imputations`) & !is.na(`Date of injury resulting in death (month/day/year)`)) %>%
mutate(date = as.Date(`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")) %>%
filter(date > as.Date("01/01/2015", format = "%m/%d/%Y"))
View(updated_fatal_encounters)
library(dplyr)
updated_fatal_encounters <- fatal_encounters_data %>%
filter(!is.na(`Race with imputations`) & !is.na(`Date of injury resulting in death (month/day/year)`)) %>%
mutate(date = as.Date(`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")) %>%
filter(date > as.Date("01/01/2015", format = "%m/%d/%Y")) %>%
arrange(date)
View(updated_fatal_encounters)
library(dplyr)
updated_fatal_encounters <- fatal_encounters_data %>%
filter(!is.na(`Race with imputations`) &
!is.na(`Date of injury resulting in death (month/day/year)`)) %>%
mutate(date = as.Date(`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")) %>%
filter(date > as.Date("01/01/2015", format = "%m/%d/%Y")) %>%
arrange(date)
View(updated_fatal_encounters)
library(dplyr)
updated_fatal_encounters <- fatal_encounters_data %>%
filter(!is.na(`Race with imputations`) &
!is.na(`Date of injury resulting in death (month/day/year)`)) %>%
mutate(date = as.Date(`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")) %>%
filter(date >= as.Date("01/01/2015", format = "%m/%d/%Y")) %>%
arrange(date)
View(updated_fatal_encounters)
library (tidyverse)
library (rmarkdown)
library (janitor)
library (ggplot2)
library (dplyr)
library (leaflet)
library (sf)
# Assuming these packages are already installed.
# Assuming base, datasets, forcats, graphics, purrr, readr, and stats are already installed and loaded.
shootings_data_2 <- read_csv("v2/fatal-police-shootings-data.csv")
shootings_agencies <- read_csv("v2/fatal-police-shootings-agencies.csv")
fatal_encounters_data <- read_csv("fatal_encounters_data.csv")
library(dplyr)
updated_fatal_encounters <- fatal_encounters_data %>%
filter(!is.na(`Race with imputations`) &
!is.na(`Date of injury resulting in death (month/day/year)`)) %>%
mutate(date = as.Date(`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")) %>%
filter(date >= as.Date("01/01/2015", format = "%m/%d/%Y")) %>%
arrange(date)
View(updated_fatal_encounters)
library(dplyr)
updated_fatal_encounters <- fatal_encounters_data %>%
filter(!is.na(`Race with imputations`) &
!is.na(`Date of injury resulting in death (month/day/year)`)) %>%
mutate(date = as.Date(`Date of injury resulting in death (month/day/year)`, format = "%m/%d/%Y")) %>%
filter(date >= as.Date("01/01/2015", format = "%m/%d/%Y")) %>%
arrange(desc(date))
View(updated_fatal_encounters)
